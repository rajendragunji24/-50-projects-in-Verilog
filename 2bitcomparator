RTL CODE
`timescale 1ns / 1ps
module comparator (
    input [1:0] A,
    input [1:0] B,
    output A_gt_B,
    output A_eq_B,
    output A_lt_B
);

assign A_gt_B = (A > B);
assign A_eq_B = (A == B);
assign A_lt_B = (A < B);

endmodule

	 
    TEST BENCH
    `timescale 1ns / 1ps
module comparatortb_v;
	// Inputs
	reg [3:0] A;
	reg [3:0] B;
	// Outputs
	wire A_gt_B;
	wire A_eq_B;
	wire A_lt_B;
	// Instantiate the Unit Under Test (UUT)
	comparator uut (
		.A(A), 
		.B(B), 
		.A_gt_B(A_gt_B), 
		.A_eq_B(A_eq_B), 
		.A_lt_B(A_lt_B)
	);
	initial begin
		// Initialize Inputs
		A = 2'b00; B = 2'b00;#10;
		A = 2'b01; B = 2'b10#10;
		A = 2'b10; B = 2'b01;#10;
		A = 2'b11; B = 2'b11;#10;
		// Wait 100 ns for global reset to finish
		#100;$finish;
        
		// Add stimulus here

	end
      
endmodule

