verilog code 
module fulladder(A,B,Cin,SUM,CARRY);
      input A,B,Cin;
		output SUM,CARRY;
assign SUM = A ^ B ^ Cin;
assign CARRY = (A & B) | (B & Cin) | (A & Cin);
endmodule
      TEST BENCH 
module fulladder_tb_v;
	reg A;
	reg B;
	reg Cin;
	wire SUM;
	wire CARRY;
  // Instantiate the Unit Under Test (UUT)
	fulladder uut (
		.A(A), 
		.B(B), 
		.Cin(Cin), 
		.SUM(SUM), 
		.CARRY(CARRY)
	);
    initial begin
		// Initialize Inputs
		A = 0; B = 0; Cin = 0;#10;
		A = 0; B = 0; Cin = 1;#10;
		A = 0; B = 1; Cin = 0;#10;
		A = 0; B = 1; Cin = 1;#10;
		A = 1; B = 0; Cin = 0;#10;
		A = 1; B = 0; Cin = 1;#10;
		A = 1; B = 1; Cin = 0;#10;
		A = 1; B = 1; Cin = 1;#10;
   	// Wait 100 ns for global reset to finish
		#100;	$finish;
	end
      
endmodule



