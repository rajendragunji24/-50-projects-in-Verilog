RTL CODE
module seven_segment_display(
    input  [3:0] digit,      // Binary input 0â€“9
    output reg [6:0] seg     // {a,b,c,d,e,f,g}
);

always @(*) begin
    case(digit)
        4'd0: seg = 7'b1111110;
        4'd1: seg = 7'b0110000;
        4'd2: seg = 7'b1101101;
        4'd3: seg = 7'b1111001;
        4'd4: seg = 7'b0110011;
        4'd5: seg = 7'b1011011;
        4'd6: seg = 7'b1011111;
        4'd7: seg = 7'b1110000;
        4'd8: seg = 7'b1111111;
        4'd9: seg = 7'b1111011;
        default: seg = 7'b0000000; // All OFF
    endcase
end

endmodule

 Test bench
module tb_seven_segment_display;

reg  [3:0] digit;
wire [6:0] seg;

seven_segment_display uut (
    .digit(digit),
    .seg(seg)
);

initial begin
    $monitor("Time=%0t Digit=%d Segments=%b", $time, digit, seg);

    digit = 0; #10;
    digit = 1; #10;
    digit = 2; #10;
    digit = 3; #10;
    digit = 4; #10;
    digit = 5; #10;
    digit = 6; #10;
    digit = 7; #10;
    digit = 8; #10;
    digit = 9; #10;
    $finish;
end

endmodule
