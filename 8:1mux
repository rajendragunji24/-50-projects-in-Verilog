RTL CODE
`timescale 1ns / 1ps
module mux(
    input[7:0] I,
	 input[2:0] sel,
	 output reg y
);

   always@(*) begin
	  case(sel)
     3'b000: y=I[0];
	  3'b001: y=I[1];
	  3'b010: y=I[2];
	  3'b011: y=I[3];
	  3'b100: y=I[4];
	  3'b101: y=I[5];
	  3'b110: y=I[6]; 
	  3'b111: y=I[7];
	default: y=1'b0;
endcase
end
endmodule 


     TEST BENCH
`timescale 1ns / 1ps
module muxtb_v;

	// Inputs
	reg [7:0] I;
	reg [2:0] sel;

	// Outputs
	wire y;

	// Instantiate the Unit Under Test (UUT)
	mux uut (
		.I(I), 
		.sel(sel), 
		.y(y)
	);

	initial begin
		// Initialize Inputs
		I = 8'b00000001;
    sel = 3'b000; #10;
    sel = 3'b001; #10;
    sel = 3'b010; #10;
    sel = 3'b011; #10;
    sel = 3'b100; #10;
    sel = 3'b101; #10;
    sel = 3'b110; #10;
    sel = 3'b111; #10;

		// Wait 100 ns for global reset to finish
		#100;$finish;
        
		// Add stimulus here

	end
      
endmodule


