RTL CODE  
`timescale 1ns / 1ps


module decoder(
   input[2:0]data_in,
   output reg[7:0]out
   );
   always @(*) begin
     case(data_in)
        3'b000: out = 8'b00000001;
        3'b001: out = 8'b00000010;
        3'b010: out = 8'b00000100;
        3'b011: out = 8'b00001000;
        3'b100: out = 8'b00010000;
        3'b101: out = 8'b00100000;
        3'b110: out = 8'b01000000;
        3'b111: out = 8'b10000000;
        default: out = 8'b00000000;
      endcase
   end
endmodule

    TEST BENCH
 `timescale 1ns / 1ps

module decoder_tb;
    reg [2:0] data_in;
    wire [7:0] out;

    // Instantiate the Unit Under Test (UUT)
    decoder uut (
        .data_in(data_in),
        .out(out)
    );

    initial begin
        $monitor("Time = %0t | data_in = %b | out = %b", $time, data_in, out);

        data_in = 3'b000; #10;
        data_in = 3'b001; #10;
        data_in = 3'b010; #10;
        data_in = 3'b011; #10;
        data_in = 3'b101; #10;
        data_in = 3'b101; #10;
        data_in = 3'b110; #10;
        data_in = 3'b111; #10;
        $finish;
    end
endmodule
 
