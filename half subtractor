 RTL  code
module halfsubtractor(a,b,difference,borrow);
   input a,b;
	output difference,borrow;
assign difference = a^b;
assign borrow = (~a&b);
endmodule
  test bench 
`timescale 1ns / 1ps
module halfsubtractortb_v;
	// Inputs
	reg a;
	reg b;
	// Outputs
	wire difference;
	wire borrow;
	// Instantiate the Unit Under Test (UUT)
	halfsubtractor uut (
		.a(a), 
		.b(b), 
		.difference(difference), 
		.borrow(borrow)
	);
	initial begin
		// Initialize Inputs
		a = 0; b = 0;#10;
		a = 0; b = 1;#10;
		a = 1; b = 0;#10;
		a = 1; b = 1;#10
     // Wait 100 ns for global reset to finish
		#100;$finish;
        
		// Add stimulus here

	end
      
endmodule
