RTL CODE
`timescale 1ns / 1ps
module priorityencoder(
     input [3:0] in,
	  output reg [1:0] out,
	  output reg valid
	  );
	  always @(*) begin
	  valid = 1'b1;
	  casex(in)
	    4'b1xxx: begin out = 2'b11; end
		 4'b01xx: begin out = 2'b10; end
		 4'b001x: begin out = 2'b01; end
		 4'b0001: begin out = 2'b00; end
		 default: begin 
		   out = 2'b00;
			valid	= 1'b0;
		 end
   endcase
 end
endmodule

    TEST BENCH 
  `timescale 1ns / 1ps
module priorityrncodertb_v;
	// Inputs
	reg [3:0] in;
	// Outputs
	wire [1:0] out;
	wire valid;
	// Instantiate the Unit Under Test (UUT)
	priorityencoder uut (
		.in(in), 
		.out(out), 
		.valid(valid)
	);
	initial begin
		// Initialize Inputs
	 in = 4'b0000; #10;
    in = 4'b0001; #10;
    in = 4'b0010; #10;
    in = 4'b0100; #10;
    in = 4'b1000; #10;
    in = 4'b1010; #10;
    in = 4'b0111; #10;
    in = 4'b1111; #10;
		// Wait 100 ns for global reset to finish
		#100;$finish;
    		// Add stimulus here

  end      
endmodule

 
