RTL CODE
`timescale 1ns / 1ps
module encoder(
   input [3:0]in,
	output reg [1:0]out
	);
	always @(*) begin
	   case(in)								
		4'b0001: out = 2'b00;
		4'b0010: out = 2'b01;
		4'b0100: out = 2'b10;
	   4'b1000: out = 2'b11;
		default: out = 2'bxx;
	 endcase
  end
endmodule

   test bench
 `timescale 1ns / 1ps
module encodertb_v;
	// Inputs
	reg [3:0] in;
	// Outputs
	wire [1:0] out;
	// Instantiate the Unit Under Test (UUT)
	encoder uut (
		.in(in), 
		.out(out)
	);
	initial begin
		// Initialize Inputs
		in = 4'b0001;#10;
		in = 4'b0010;#10;
		in = 4'b0100;#10;
		in = 4'b1000;#10;
		in = 4'b0011;#10;
		in = 4'b0000;#10;

		// Wait 100 ns for global reset to finish
		#100;$finish;
        
		// Add stimulus here

	end
      
endmodule

  
